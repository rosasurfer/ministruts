#
# alias phpstan='php7 -d memory_limit=128M ~/.composer/vendor/phpstan/phpstan/bin/phpstan --ansi'
#
# phpstan analyse -a autoload.php -c config.neon --level=0 [--] <directory>
#

services:                                                           # loaded before auto-loading in block "parameters" 
    -
        class: rosasurfer\db\orm\phpstan\DAO_Find_ReturnType
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
    -
        class: rosasurfer\db\orm\phpstan\DAO_FindAll_ReturnType
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension
    -
        class: rosasurfer\db\orm\phpstan\PersistableObject_Dao_ReturnType
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension
    -
        class: rosasurfer\db\orm\phpstan\PersistableObject_PopulateNew_ReturnType
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension
    -
        class: rosasurfer\core\phpstan\Singleton_GetInstance_ReturnType
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension

parameters:
    autoload_files:
        - etc/phpstan/function-stubs.php                            # stubs for PHP extensions and procedural code

    fileExtensions:                                                 # additional files to analyse
       #- html
       #- phtml                                                     # TODO: Tile default vars trigger errors

    excludes_analyse:
        - etc/vendor/
        - src/globals.php
        - src/util/apc/apc.php                                      # TODO: replace it

    reportUnmatchedIgnoredErrors:           false
    polluteScopeWithLoopInitialAssignments: true
    polluteCatchScopeWithTryAssignments:    true
    
    ignoreErrors:
        - '/Call to ((static )?method|function) [^ ]+ with incorrect case:/'                                        # seriously?
        - '/Array \(([^ ]+)\[\]\) does not accept (\1\|)?null\b/'                                                   # NULL should be considered a value, not a type
        - '/(Static )?property [^ ]+ \(([^ ]+)\) does not accept (\2\|)?null\b/i'                                   # - dito -
        - '/Parameter #[0-9]+ [^ ]+ of class [^ ]+ constructor expects ([^ ]+), (\1\|)?null given\b/'               # - dito -
        - '/Parameter #[0-9]+ [^ ]+ of (static )?(function|method) [^ ]+ expects ([^ ]+), (\3\|)?null given\b/'     # - dito -
        - '/Calling method [^ ]+ on possibly nullable type [^ ]+\|null\b/'
        - "/Casting to (bool|int|float|string) something that's already (bool|int|float|string)/"                   # too simple implementation
        - '/Strict comparison using [=!]== between (int|string) and null will always evaluate to (true|false)\b/'

        # unfixed PHPStan bugs 
        - '/Cannot call method andDependency\(\) on null\b/'
        - '/Method rosasurfer\\db\\orm\\meta\\EntityMapping::getVersion\(\) should return rosasurfer\\db\\orm\\meta\\PropertyMapping\|null but returns bool\|rosasurfer\\db\\orm\\meta\\PropertyMapping\|null\b/'
        - '/Parameter #1 \$mode of method rosasurfer\\ministruts\\ActionMapping::setFormValidateFirst\(\) expects bool, bool\|mixed given\b/'
        - '/Method rosasurfer\\db\\(mysql\\MySQL|pgsql\\Postgres|sqlite\\SQLite)Result::numRows\(\) should return int but returns int\|null\b/'


