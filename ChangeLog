2008-01-15

   - Struts: DTD umbenannt dtd/struts4php-config.dtd -> dtd/php-struts-config.dtd


2008-01-13

   - umfangreiches Refactoring am DB-Layer


2008-01-12

   - Refactoring: php/cache/AbstractCachePeer -> php/cache/CachePeer


2008-01-12

   - Refactoring: php/cache/ProcessMemoryCache -> php/cache/ReferencePool

   - php/cache/ApcCache verwendet für's Reference-Pooling eine ReferencePool-Instanz


2008-01-11

   - Dokumentation erweitert


2008-01-10

   - neue Methoden: php/dao/BaseDAO:makeObject(), php/dao/BaseDAO:makeObjects()


2008-01-07

   - neues Package php/dependency: Dependency-Framework

   - beim Cachen kann zusätzlich zur Expire-Zeit des Wertes eine Dependency angegeben werden

   - Struts: die Strutskonfiguration wird ständig gecacht (auch auf development-Systemen), per FileDependency
     monitored und bei Änderungen automatisch neu geladen


2008-01-07

   - php/net/http/HttpClient::setFollowRedirects() -> HttpClient::followRedirects(),
     php/net/http/HttpClient::isFollowRedirects()  -> HttpClient::followsRedirects()

   - php/util/String::decodeUtf8() verarbeitet sowohl Strings als auch String-Arrays


2008-01-05

   - neue Methoden: util/String::isUtf8Encoded(), util/String::decodeUtf8() (guess what they do)

   - php/struts/RequestProcessor: UTF8-kodierte URL's des Internet Explorers werden verarbeitet


2007-12-22

   - umfangreiches Refactoring am DB-Layer, u.a. ist das Mapping jetzt in den DAOs, PersistableObject::populate()
     und die createInstance()-Methoden in den konkreten Objekten existieren nicht mehr, statt dessen wurde alles
     in PersistableObject::createInstance() zusammengefaßt


2007-12-19

   - struts-config.xml: Syntaxvereinfachungen <tiles-definitions> -> <tiles>, <definition> -> <tile>


2007-12-18

   - Refactoring: php/util/BaseValidator   -> php/util/CommonValidator

   - php/db/PersistableObject -> php/dao/PersistableObject

   - DB-Layer: DAO-Hierarchie eingeführt, BaseDAO, IDaoConnected, alles von "static" auf Instanzen umgestellt
     (Instanzen sind über PersistableObject::dao() erreichbar)


2007-12-16

   - globale SQL-Funktionen aus phpLib.php entfernt (statt dessen die jeweiligen Object-Methoden benutzen)

   - Struts: Syntax vereinfacht, Eingabevalidierung ohne Action-Klassen ist möglich (API-Stand: stable)


2007-12-15

   - struts-config.xml: anwendungseigene HTTP-404- und HTTP-405-Fehlerlayouts werden automatisch eingebunden

   - php/struts/Tile: Zugriff auf umgebende Tiles-Instanz mit $this->parent->property entfernt


2007-12-12

   - struts-config.xml: in Tiles-Properties (<set>-Tag) vom Typ "string" können Variablen verwendet werden


2007-12-10

   - php/db/MySQLConnector: mysql_affected_rows() gibt jetzt die Anzahl der gefundenen anstatt der
     modifizierten Zeilen zurück


2007-12-06

   - Refactoring: php/core/Instantiatable -> php/core/ISingle


2007-12-05

   - php/net/http/HttpResponse: Status-Codes implementiert

   - php/db/: neu DBPool, DB, MySQLConnector (der DB-Zugriff wird klassenorientiert)

   - php/exceptions/: neu DatabaseException


2007-12-04

   - php/init.php -> phpLib.php

   - Klassen werden mit absolutem Pfad geladen, dadurch muß "include_path" nicht mehr durchsucht werden

   - Refactoring: globale Variable $__imports -> $__classes


2007-12-03

   - einige globale Funktionen aus init.php entfernt (statt dessen nur noch Methoden der jeweiligen
     Objekte benutzen)

   - neu: php/net/http/HeaderUtils
          php/struts/PageContext::get()
          php/struts/PageContext::set()
          php/struts/Request::isSessionId()

   - die HttpSession ist nur noch per Request::getSession() zu erreichen, nicht mehr durch HttpSession::me()

   - die HttpSession wird automatisch und nur, wenn sie wirklich benötigt wird, gestartet


2007-12-02

   - neu: php/struts/PageContext zum Datenaustausch zwischen Templates


2007-11-30

   - struts-config.xml: "form-error"-Attribut für ActionMappings, damit können Formulareingaben ohne
     ActionKlassen validiert werden, wenn außer der Validierung keine weitere Logik benötigt wird


2007-11-29

   - php/struts/:
     * logische Prüfung und Fehlermeldungen beim Parsen von struts-config.xml ausgebaut
     * forward-Attribut im ActionMapping kann auf globalen Forward oder Tiles-Definition zeigen
     * Tiles können ineinander geschachtelt werden
     * im <set>-Tag in Tilesdefinitionen muß kein Typ mehr angegeben werden, er wird selbst erkannt
     * in der HTML-Seite kann mit $this->parent->property auf in der umgebenden Tiles-Definition
       gesetzte Eigenschaften zugegriffen werden


2007-11-28

   - php/struts/FrontController: strengere Prüfung beim Zugriff auf CVS- oder WEB-INF-Verzeichnis,
     als Antwort wird nur noch ein 404 (SC_NOT_FOUND) akzeptiert

   - vorausschauendes Laden weiterer Klassendefinitionen; include('imports.php') in Projekten nicht
     mehr nötig


2007-11-27

   - php/struts/Request::getApplicationPath() -> getContextPath()
     php/struts/Request::getHostURL() hinzugefügt

   - php/actions/AbstractActionForm gelöscht, wird durch php/struts/ActionForm ersetzt

   - Package php/lang/  ->  php/exceptions/


2007-11-26

   - Sessionverwaltung ausgebaut: php/struts/HttpSession

   - php/util/Config vervollständigt (Anwendungskonfiguration)


2007-11-25

   - Refactoring:   php/core/StaticFactory            -> php/core/StaticClass
                    php/struts/Request::getPathInfo() -> Request::getPath()
                    php/struts/Request::getQuery()    -> Request::getQueryString()

   - neue Methoden: php/struts/ActionForward::addQueryData()
                    php/struts/Request::getApplicationPath()
                    php/struts/Request::getRelativePath()
                    php/struts/Request::getRelativeURI()
                    php/struts/Request::getURI()


2007-11-24

   - php/util/BaseValidator::isEmailAddressPattern() hinzugefügt


2007-11-23

   - Refactoring: globale Variable $__logLevelSettings -> $__logLevels


2007-11-20

   - php/struts/RequestProcessor: ActionMessages/-Errors werden bei einem Redirect automatisch zum
     nächsten Request übertragen

   - php/cache/: transparenter Namespace-Support, Werte können in verschiedenen Projekten unter
     denselben Keys gespeichert werden, ohne sich zu stören


2007-11-19

   - Refactoring: TorHelper::getExitNodes() benutzt CurlHttpClient
                  Klassen php/net/http/CURL und php/net/http/CurlHttpClient zusammengefaßt
                  php/functions.php -> php/init.php

   - php/struts/Request::getQuery() hinzugefügt

   - Bugfix: php/struts/ActionMapping::findForward('__self') hatte Query-Parameter der URL ignoriert


2007-11-12

   - Bugfix: Validierung von E-Mail-Adressen korrigiert


2007-11-06

   - php/net/http/CurlHttpClient::send() wirft jetzt bei allen auftretenden Fehlern eine IOException


2007-10-30

   - neues Package php/net/http/ für alles, was mit HTTP zu tun hat

   - neues Package php/net/mail/ für alles, was mit E-Mail zu tun hat

   - php/net/http/CurlHttpRequest: GET und POST implementiert

   - php/struts/FrontController: überprüft während der Initialisierung, ob der Webzugriff auf WEB-INF-
     und CVS-Verzeichnisse gesperrt ist

   - php/net/http/RemoteHttpRequest: gelöscht, statt dessen nur noch CurlHttpRequest verwenden


2007-10-29

   - Module: Konfiguration wird mit XPath eingelesen, dadurch sind überall Vorwärtsdeklarationen möglich

   - Tiles: Definitionen und Dateipfade werden auf Existenz überprüft


2007-10-28

   - automatische Rollenüberprüfung per struts-config.xml integriert

   - Vereinfachung für die Webentwickler: Action::executeBefore() und Action::execute() können statt
     einer ActionForward-Instanz auch einfach nur den entsprechenden Namen zurückgeben (so wie er in
     der struts-config.xml definiert ist)

   - der Modulprefix der Module wird nicht mehr in der struts-config.xml konfiguriert, sondern über
     den Dateinamen definiert:

     struts-config.xml          - Prefix: ""
     struts-config-member.xml   - Prefix: "/member"
     struts-config-xyz-123.xml  - Prefix: "/xyz-123"
