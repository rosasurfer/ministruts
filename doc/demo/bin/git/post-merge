#!/bin/bash
#
# Git hook to automatically execute Composer commands after a Git merge. If the file "composer.lock" was modified by the
# merge the command "composer install" is executed. If the file "composer.lock" was not modified by the merge the command
# "composer dump-autoload" is executed.
#
#
# Notes:
# ------
#  - The hook is not executed if merging failed due to conflicts.
#  - The hook is not executed if "git pull" is run with the --rebase option.
#  - If the hook is not executed automatically the Composer commands have to be called manually.
#  - Whether or not hooks are executed by a graphical Git replacement depends on the tool. For example the JGit
#    implementation of Eclipse atm does not execute hooks.
#
#
# Comments:
# ---------
#  - post-rewrite works for me. As side effect it is also executed on amend.
#    @see  http://stackoverflow.com/questions/21307744/git-post-rebase-hook
#  - I would check updated submodules too:
#    check_run .gitmodules "git submodule init && git submodule update"
#
set -e


# --- functions -------------------------------------------------------------------------------------------------------------

# print a message to stderr
function error() {
    echo "error: $@" 1>&2
}


# check user aliases and get an existing Composer alias
COMPOSER_ALIAS=
COMPOSER_ALIAS_CHECKED=
function check_composer_alias() {
    if [[ -z "$COMPOSER_ALIAS_CHECKED" && -f ~/.bash_aliases ]]; then
        . ~/.bash_aliases
        COMPOSER_ALIAS=${BASH_ALIASES[composer]:-${BASH_ALIASES[composer.phar]}}
        unalias -a
    fi
    COMPOSER_ALIAS_CHECKED=done
}

# --- end of functions ------------------------------------------------------------------------------------------------------


# execute an existing user hook
[ -x "$0.user" ] && "$0.user" "$@"


# find Composer
COMPOSER=$(type -P composer)
COMPOSER=${COMPOSER:-$(type -P composer.phar)}
[ -z "$COMPOSER" ] && { check_composer_alias; composer=$COMPOSER_ALIAS; }
[ -z "$COMPOSER" ] && { error "ERROR: could not find Composer"; exit 1; }


# check for a Cygwin terminal and use an existing alias as workaround for possible color issues
CYGWIN=$(type -P cygpath.exe)
if [[ -n "$CYGWIN" && "$TERM" == *"color"* ]]; then
    check_composer_alias
    COMPOSER=${COMPOSER_ALIAS:-$COMPOSER}
fi


# get the changed files from Git
CHANGED_FILES=$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)


# check "composer.lock" for modifications and run the according Composer command
function check_lockfile() {
    LOCKFILE='composer.lock'
    if [[ -f "$LOCKFILE" && $(echo "$CHANGED_FILES" | grep --quiet -Fx "$LOCKFILE") ]]; then
        echo " * changes detected in $LOCKFILE"
        echo " * running composer install"
        COMPOSER_ALLOW_SUPERUSER=1 $COMPOSER install --ignore-platform-reqs --no-dev
    else
        COMPOSER_ALLOW_SUPERUSER=1 $COMPOSER dump-autoload
    fi
}
check_lockfile
