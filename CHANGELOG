
2017-03-12

   - core:   outsource Object functionality to trait to enable re-use by non-framework classes
   - db/orm: implement nullable/not nullable version field via mapping configuration
   - db/orm: implement column mapping to PHP classes


2017-03-08

   - db/orm: add method DAO::execute() for execution of arbitrary OQL statements
   

2017-03-05

   - db/orm: extend model mappings by SQL bind types and column behaviors
   - db/orm: move properties PersistableObject::${primary-key|created|updated|deleted} to model classes 
   - db/orm: quick and dirty query substitution of model names by table names 
   - replace di/DiAwareInterface by di/DiAwareTrait
   - add helper function rosasurfer\strCollapseWhiteSpace()


2017-03-02

   - db/pgsql/PostgresConnector: skip unsupported connection options
   
   
2017-02-27

   - struts-config: rename <forward ... forward="{name}"> to <forward ... alias-for="{name}">
   - struts-config: replace <set file|tile="{includable}"> by <include value="{includable}">
   - struts-config: re-implement <set-property> as <set>


2017-02-26

   - struts-config: prevent use of tile templates as final view definition
   - struts-config: detect and handle circular tile references
   

2017-02-25

   - struts-config: tile childnodes ("set" elements) and properties ("set-property" elements) are separated
   

2017-02-24

   - struts-config: tile definitions can be aliased, e.g.: <tile name=".guest.login"  alias-for=".guest.home"/>


2017-02-23

   - move application base URI from $_SERVER['APPLICATION_BASE_URI'] to Config::get('application.base-uri');
   - simplify helper function rosasurfer\versionedUrl() to vUrl()
   - application initialization options:
     change options for "handle-errors" to "[strict|weak|ignore]" with default "strict" 
     change default for option "handle-exception" to TRUE 
     rename option "global-helpers" to "globals"


2017-02-19

   - the db/*/Connector constructor is part of interface db/ConnectorInterface
   - new interface di/DiAwareInterface for all classes


2017-02-17

   - methods db/*/Connector::escape(Identifier|Literal|String)()
   - methods db/orm/DAO::escape(Identifier|Literal|String)()


2017-02-16

   - methods db/(Connector|Result)::getVersion(String|Number)()
   - method db/Result::fetchString()
   - rename methods db/Result::fetchAs(Bool|Int|Float)() to fetch(Bool|Int|Float)()
   - rename db/orm/DAO::findMany() to findAll()
   - method db/orm/DAO::findOne() - add parameter $allowMany=false
   - rename attribute /struts-config/action-mappings/mapping[@validate-before] to [@form-validate-first]


2017-02-15

   - methods db/(Connector|Result)::lastInsertId()
   - methods db/(Connector|Result)::lastAffectedRows()
   - methods db/Result::numRows()
   - methods db/Result::nextRowIndex()
   - methods db/Result::release()


2017-02-10

   - methods db/IResult::fetchAsBool(), db/IResult::fetchAsInt(), db/IResult::fetchAsFloat() for any result set field


2017-02-09

   - fix implementation of is_class()/is_interface()/is_trait()


2017-02-08

   - helper function rosasurfer/normalizeEOL()
   - end-of-line constants EOL_MAC, EOL_NETSCAPE, EOL_UNIX, EOL_WINDOWS
   - add IRosasurferException::addMessage() and PHPError::getSimpleType()
   - db/Connector and db/Result implement interfaces


2017-02-03

   - reorganize database packages
   - add db connectors for PostgreSQL and SQLite
   - flatten the directory structure (PSR-4 conforming)


2017-02-01

   - dao/BaseDao: remove public access of property $mapping
   - dao/BaseDao: rename finder methods to fetchOne() and fetchAll()


2017-01-30

   - by default ministruts/url/Url and ministruts/url/VersionedUrl include the application base URI
   - dao/DAOWorker:         rename db mapping property 'link' to 'connection'
   - dao/PersistableObject: add method getConnector() and alias


2017-01-27

   - ministruts/Tile: remove access to the Tile instance from the view (variable $this)
   - ministruts/Tile: restrict Tile hints in the view's source code to the local machine
   - ministruts/Tile: show Tile hints in the view's source code with full paths


2017-01-25

   - redefine Struts config DTD for improved clarity:
     /struts-config/action-mappings/mapping[@methods]  => [@http-methods]
     /struts-config/action-mappings/mapping[@scope]    => [@form-scope]
     /struts-config/action-mappings/mapping[@validate] => [@validate-before]
     /struts-config/tiles/tile[@path]                  => [@file]
     /struts-config/tiles/tile[@extends]               => [@extends-tile]

   - helper function rosasurfer/strToBool()


2017-01-22

   - helper function rosasurfer/strIsNumeric()


2016-08-26

   - view helpers rosasurfer/ministruts/url/Url and rosasurfer/ministruts/url/VersionedUrl


2016-08-11

   - helper function rosasurfer/pluralize($items, $singular, $plural) for simple message forming without gettext extension


2016-08-03

   - helper function rosasurfer/ifEmpty($value, $altValue)


2016-07-20

   - Config classes support multiple custom configurations with an application default configuration.
   - helper function rosasurfer/is_trait()


2016-07-06

   - helper functions rosasurfer/strLeftTo() and rosasurfer/strRightFrom() support two optional parameters:
     $includeLimiter, $onNotFound


2016-07-04

   - updated framework requirements:
     minimum PHP version: 5.6
     php.ini "short_open_tag": On


2016-07-01

   - removed legacy references to APD (Advanced PHP Debugger)


2016-06-22

   - default value for php/net/http/HttpClient::followRedirects is TRUE


2016-05-24

   - branch "B_NO_NAMESPACES" for legacy MiniStruts version without namespace support


2016-04-10

   - php/net/http/CurlHttpClient: enable "Keep-Alive" connections


2016-03-28

   - php/util/Logger: method alias Logger::warn(...) for Logger::log(..., L_WARN)


2016-03-14

   - the functions strStartsWith(), strStartsWithI(), strEndsWith() and strEndsWithI() can process a single prefix/suffix
     or an array of prefixes/suffixes


2016-03-06

   - new string functions strLeftTo(), strRightFrom()


2016-03-03

   - more date/time formats for php/util/CommonValidator::isDateTime()


2016-03-02

   - new string functions strIsSingleQuoted(), strIsDoubleQuoted(), strIsQuoted(), strIsDigit()


2016-02-27

   - new helper function isLittleEndian()


2016-02-25

   - function formatDate($format, $datetime) renamed to formatDateStr($datetime, $format)


2016-02-10

   - new helper function is_datetime() as alias for php/util/CommonValidator::isDateTime()


2015-09-07

   - new string functions strContains() and strContainsI() replace php/util/String::contains()


2015-09-04

   - new string function strStartsWith() and strStartsWithI() replace php/util/String::startsWith()
   - new string function strEndsWith() and strEndsWithI() replace php/util/String::endsWith()
   - new string functions strCompare(), strCompareI(), strLeft(), strRight()


2015-08-16

   - new alias typeof() for function getType()


2015-08-03

   - php/struts/Module: the Struts DTD file is now loacted in the Struts package (src/php/struts)


2014-09-25

   - php/util/Logger: log messages can be sent by SMS (Clickatell account required), for configuration @see class description


2014-09-24

   - php/util/Logger: - Logging per E-Mail überarbeitet: Ist eine Mailadresse konfiguriert, wird immer eine Mail verschickt
                        (auch in der Konsole), ggf. kann der Versand per Konfiguration deaktiviert werden.
                      - Mailkonfiguration angepaßt: Schlüssel "mail.address.buglovers" zu "log.mail.receiver"


2014-09-21

   - neue Basisklassen für verschiedene Messenger-Implementierungen (ICQ, IRC, SMS)


2014-09-20

   - neu: php/dao/PersistableObject::isModified() - öffentlicher Getter für internen isModified-Status


2014-09-19

   - Default-Signatur von formatMoney($value, $decimals, $decimalSeparator) auf internationales Format umgestellt


2014-09-07

   - php/net/http/CurlHttpClient: alle CURL-Optionen können benutzerdefiniert angepaßt werden, ermöglicht Lesen und Schreiben
                                  von vorhandenen Cookies

2014-09-06

   - php/net/http/HttpRequest:    neue Methoden zum Lesen und Schreiben von benutzerdefinierten Request-Headern
   - php/net/http/CurlHttpClient: erweiterte Optionen für benutzerdefinierte Request-Header und Transfer-Encodings


2013-06-23

   - neu: shell_exec_fix(), Workaround für Windows-Bug in shell_exec() (Abbruch der Ausgabe bei DOS-EOF-Marker im Stream)


2013-06-22

   - neue Zeitkonstanten YEAR und YEARS


2012-06-21

   - Fehler beim Erstellen und Testen von Verzeichnissen beseitigt


2012-04-03

   - php/file/pdf/SimplePdfDocument::saveAs() - "Speichern unter..."-Methode für alle PDF-Klassen


2012-02-05

   - Dateipfade werden möglichst anhand von APPLICATION_ROOT definiert, um Zugriffsprobleme mit symbolischen Links
     in der Projektstruktur zu verhindern


2012-02-05

   - Namenskonflikte der Library mit gleichnamigen SPL-Klassen aufgelöst


2011-02-02

   - php/struts/BaseRequest::_construct() - Parsen der POST-Parameter bei Content-Type "multipart/form-data" verbessert


2011-02-02

   - neu:    php/db/DB ermöglicht die Angabe weiterer Verbindungsoptionen in der DB-Konfiguration
   - neu:    php/dao/CommonDAO::refresh() - globale Methode für alle DAO's
   - Bugfix: php/util/Config - PHP löst bei bestimmten, ungültigen Zugriffen auf Strings keine Fehler aus


2011-01-04

   - Refactoring: php/struts/BaseRequest -> abstract php/struts/RequestBase


2010-12-25

   - neu: php/struts/BaseRequest::getContentType() - gibt den Content-Type-Header des Requests zurück


2010-12-12

   - Exit Code != 0 bei Auftreten einer Exception forciert


2010-11-26

   - neu: Package php/file/image/barcode/* - BarCode-Library


2010-11-17

   - neu: php/struts/Tile::getMergedProperties() - gibt die eigenen und die geerbten Properties zurück


2009-10-22

   - Bugfix in php/struts/BaseRequest::guessRealRemoteAddress()


2009-09-19

   - neu: php/struts/BaseRequest::getParameter() - gibt einen einzelnen Parameterwert zurück


2009-09-16

   - neu: php/struts/BaseRequest::getAttributes() - liefert alle im Request gespeicherten Attribute
   - neu: php/struts/BaseRequest::getMapping()    - liefert das zugeordnete ActionMapping des Requests
   - neu: php/struts/BaseRequest::getModule()     - liefert das zugeordnete Struts-Module des Requests


2009-08-18

   - neu: php/dao/PersistableObject::touch() - zur externen Generierung von Versionsinformationen


2009-06-26

   - php/util/Config: Konfigurationsdateien für Konsolenanwendungen werden zuerst im aktuellen Verzeichnis gesucht


2009-06-13

   - neu: php/net/dns/checkDNS.php - Script zum automatisierten Überprüfen von DNS-Einträgen


2009-06-13

   - php/dao/DaoWorker.php - strengere Typüberprüfung


2009-05-12

   - Bugfix: php/core/Singleton::getInstance() - Endlosschleifen beim rekursiven Abfragen einer Instanz werden abgefangen


2009-05-09

   - Refactoring: php/net/NetTools::getHostByAddr()  ->  NetTools::getHostByAddress()
   - Request::guessRealRemoteAddress() ermittelt die letzte im Internet erreichbare Adresse der übertragenen Forwarded-For-Header
   - neu: php/util/CommonValidator::isIPLanAddress() - prüft, ob eine IP-Adresse eine lokale Netzwerkadresse ist


2009-05-05

   - neu: htmlEncode() - Shortcut-Ersatz für String::htmlSpecialChars() (bessere Lesbarkeit)


2009-05-04

   - neu: php/net/NetTools
   - neu: php/struts/Request::guessRealRemoteAddress() - ermittelt die tatsächliche IP eines Kunden
   - Refactoring: php/struts/Request  ->  php/struts/BaseRequest - Basisklasse für Erweiterungen von Request


2009-04-13

   - php/util/Logger: bei Ausgabe von Meldungen werden evt. gesendete Location-Header berücksichtigt (www-redirect)


2009-04-12

   - Refactoring: register_lifo_shutdown_function() -> push_shutdown_function()
   - Der Versand einer E-Mail kann durch entsprechende Konfiguration in die Shutdown-Phase des Scriptes verschoben werden,
     um evt. Transaktionen nicht unnötig lange zu blockieren.

2009-03-05

   - php/util/Config: Laufzeitänderungen sind nur noch für den aktuellen Request gültig und werden nicht zurück in den Cache geschrieben


2009-03-04

   - php/util/Config: ein Loglevel kann durch Angabe eines leeren Wertes auf den Default-Loglevel zurückgesetzt werden


2009-02-28

   - neue Funktion is_interface(): prüft die Existenz einer Interface-Definition ohne Aufruf von __autoload()
   - neue Funktion register_stacked_shutdown_function(): ermöglicht Spezifizierung der Ausführungsreihenfolge mehrerer Shutdown-Handler


2009-02-16

   - php/util/Logger: loggt auch bei normalen Logmessages einen Stacktrace (auch ohne Exception)


2009-02-16

   - php/struts/ActionForward::addQueryData() akzeptiert alle skalaren Werte als Value (vorher nur Strings)


2009-02-12

   - php/locking/SystemFiveLock: Logging von unterdrückten Fehlern

   - php/locking: Bugfix: rekursive Lockversuche konnten unter bestimmten Umständen zu Endlosschleifen führen

   - Initialisierung von Config und Cache vereinfacht

   - php/db/MySQLConnector: bei Deadlocks werden die betroffenen Transaktionen und die beteiligten Locks geloggt


2009-02-10

   - php/db/MySQLConnector: bei Lock-Wait-Timeouts werden die in der DB laufenden Prozesse geloggt.


2009-02-09

   - php/db/MySQLConnector: im Loglevel DEBUG und bei Exceptions wird die Ausführungsdauer der Query geloggt

   - neu: php/util/String::stripLineBreaks()


2009-01-30

   - neu: php/cache/CachePeer::get($key, $default)
     Die get()-Methoden aller CachePeers können mit einem Defaultvalue aufgerufen werden, der zurückgegeben wird, wenn der gewünschte Wert
     im Cache nicht existiert.


2009-01-27

   - php/struts/Request::dropActionErrors()  =>  Alias für Request::removeActionErrors(),
     Request::dropActionErrors() gibt die gelöschten ErrorMessages zurück


2009-01-26

   - neu: php/util/String::encodeUtf8() - Kodierung von Strings und String-Arrays


2009-01-24

   - php/dependency/: Unterscheidung, ob $minValidity geprüft wird oder nicht, erfogt bei Dependency-Erzeugung und nicht im Cache

   - php/dependency/FileDependency: Erzeugung von Dependencies für mehrere Dateien vereinfacht


2009-01-22

   - php/dependency/: Klassenstruktur vereinfacht


2009-01-21

   - php/struts/FrontController: Caching überarbeitet, die XML-Dateien werden jetzt nur noch alle 20 Sekunden auf Veränderung überprüft

   - php/cache/CachePeer: Caches vereinfacht (CachePeer::store() wurde entfernt)

   - php/dependency/: Dependencies können eine minimale Gültigkeit haben und werden dann nur in definierten Intervallen überprüft

   - Funktionen is_int(), is_float(), is_double(), is_string() durch direkte Casts ersetzt (Casts-Tests sind mehr als doppelt so schnell)


2009-01-19

   - Exception-Handling überarbeitet: auch während des Shutdowns können jetzt Exceptions geworfen werden


2009-01-17

   - php/util/Logger überarbeitet

   - php/util/Config: Caching überarbeitet, die Config-Dateien werden jetzt nur noch alle 20 Sekunden auf Veränderung überprüft


2009-01-14

   - neu: php/util/Date


2009-01-12

   - __autoload() warnt bei relativen Klassenpfaden


2009-01-08

   - neu: php/dependency/MinAgeDependency


2009-01-06

   - neu: php/locking/BaseLock, php/locking/Lock,


2009-01-03

   - neu: php/locking/SystemFiveLock


2009-01-01

   - Dependency-Framework:

     neu: php/dependency/ChainedDependency
          php/dependency/MaxAgeDependency

     neu: ChainedDependency-Instanzen können logisch verknüpft werden (AND und ODER)

     Refactoring: php/dependency/IDependency::isStatusChanged()  ->  php/dependency/IDependency::isValid()
                  php/dependency/AbstractDependency              ->  php/dependency/ChainableDependency


2008-12-22

   - Bugfix: php/net/http/HttpRequest konnte mit ungültiger URL erzeugt werden

   - Bugfix: php/net/mail/SMTPMailer - Punkte am Beginn einer Zeile der Mail wurden nicht escaped
                                     - zu lange Zeilen in der Nachricht wurden nicht umgebrochen

2008-12-21

   - neu: php/net/mail/CLIMailer, php/net/mail/FileSocketMailer, php/net/mail/SMTPMailer


2008-12-06

   - neu: php/locking/FileLocker

   - neu: php/struts/Request::getHeader() - zur Abfrage eines einzelnen Headers

   - php/util/Config: erkennt jetzt auch Änderungen durch neu hinzukommende config-Dateien

   - php/struts/FrontController: Parsen und Cachen der struts-config.xml synchronisiert


2008-12-05

   - Refactoring: php/dependency/ChainableDependency  ->  php/dependency/AbstractDependency


2008-12-02

   - php/net/mail/Mailer: Logmeldungen überarbeitet, kein Werfen von verschachtelten Exceptions mehr


2008-12-01

   - php/net/mail/Mailer: von PHP-Errormessages auf Exceptions umgestellt

   - php/net/mail/Mailer: verarbeitet Pseudonamen in E-Mailadressen ("Firstname Lastname <user@domain.tld>")


2008-10-29

   - Bugfix: SimpleXMLElement::xPath() gibt entgegen der Dokumentation NICHT immer ein Array zurück


2008-10-23

   - neu: php/cache/FileSystemCache

   - mehrere Caches möglich, können in config.properties konfiguriert werden


2008-10-22

   - neu: php/dependency/ChainableDependency

   - Refactoring: php/dependency/FileDependency ist von ChainableDependency abgeleitet


2008-08-18

   - neue Methode: byteSize() zur formatierten Ausgabe von Bytewerten


2008-03-02

   - struts-config.xml: Attribut umbenannt: /struts-config/action-mappings/mapping/[@method] -> [@methods]

   - struts-config.xml: /struts-config/action-mappings/mapping/[@methods]:  Default-Wert auf "GET" gesetzt, d.h.,
     daß dieses Attribut in den meisten Fällen nicht mehr angegeben werden muß. Nur POST-URL's müssen noch extra
     konfiguriert werden. Sollen GET und POST unterstützt werden, werden beide Methoden kommagetrennt angegeben:

        methods="get,post"

   - php/util/Config::get($key, $default): zusätzlicher Parameter $default
     Dieser Defaultwert wird zurückgegeben, wenn der Schlüssel $key nicht existiert. Ohne Defaultwert wird bei
     nicht existierendem Schlüssel eine RuntimeException geworfen. Möchte man diese Exception verhindern, aber keinen
     Defaultwert angeben (altes Verhalten), ruft man die Methode mit $default = NULL auf:

        $value = Config::get('myKey', null);

   - php/util/Config: Bei der Suche nach Konfigurationsdateien wird das WEB-INF-Verzeichnis der Anwendung und zusätzlich
     der Include-Pfad durchsucht, wodurch die Konfiguration flexibler gestaltet werden kann.  Es wird also in jedem
     einzelnen Pfad des Include-Pfads nach einer "config.properties" und einer "config-custom.properties" gesucht.
     (siehe Dokumentation in der Klasse)


2008-03-01

   - Tiles: In jedem Html-Fragment steht eine Variable $session mit der aktuellen HttpSession zur Verfügung.
     Existiert keine Session, ist diese Variable NULL.


2008-02-23

   - struts-config.xml: neues Attribute "scope" im ActionMapping
     Werte: "request" - ActionForm wird wie bisher im Request gespeichert
            "session" - ActionForm wird in der Session gespeichert (ermöglicht mehrseitige Formulare etc.)


2008-02-16

   - php/exceptionsPHPErrorException: im Stacktrace wird ein weiterer Level (der Eintrittspinkt in den
     PHP-Kernel) angezeigt


2008-02-14

   - php/util/Logger: E-Mail-Adresskonfiguration auf Config::get('mail.buglovers') umgestellt

   - php/struts/Request::removeAttribute() -> Request::removeAttributes(), mehrere Argumente werden
     verarbeitet

   - php/struts/HttpSession::removeAttribute() -> HttpSession::removeAttributes(), mehrere Argumente
     werden verarbeitet

   - neue Methode: php/struts/Request::removeActionErrors()

   - Bugfix: htmlSpecialChars() unterstützt vor PHP 5.2.3 nur 3 Parameter


2008-02-13

   - Struts-Syntax: /struts-config/[@doc-base] kann eine Liste von Verzeichnissen enthalten,
     in denen nach HTML-Dateien gesucht wird


2008-02-12

   - Struts-Syntax: neues Tag "controller", RoleProcessor-Konfiguration dorthin verschoben
     (/struts-config/controller/[@role-processor])

   - Struts: je Modul kann ein anwendungsspezifischer RequestProcessor konfiguriert werden
     (/struts-config/controller/[@request-processor])

   - neue Methoden: php/struts/Request::getHostname(), php/struts/Request::getDomainname()


2008-02-10

   - neue Methode: php/struts/RoleProcessor::isUserInRole()


2008-02-06

   - Logger fängt noch mehr Fehler ab


2008-02-05

   - neue Methode php/struts/Request::getApplicationURL()

   - Konfiguration: In index.php muß die Konstante APPLICATION_CONTEXT nicht mehr definiert werden,
     stattdessen wird dieser Wert in der Apache-Konfiguration gesetzt (SetEnv APPLICATION_PATH '/myapp').

   - Aufruf des FrontControllers in index.php nur noch mit:  FrontController::processRequest();


2008-02-04

   - neue Methode php/util/String::htmlSpecialChars() mit sinnvolleren Default-Values
   - neue Methode php/util/String::htmlEntities() mit sinnvolleren Default-Values


2008-01-21

   - APD-Profilingreport: der URL-Parameter "limit=0" bedeutet kein Limit


2008-01-20

   - APD-Profilingreport: kann übers Web abgerufen werden, ein Link wird automatisch eingeblendet


2008-01-15

   - Struts: DTD umbenannt dtd/struts4php-config.dtd -> dtd/php-struts-config.dtd


2008-01-13

   - umfangreiches Refactoring am DB-Layer


2008-01-12

   - Refactoring: php/cache/AbstractCachePeer -> php/cache/CachePeer


2008-01-12

   - Refactoring: php/cache/ProcessMemoryCache -> php/cache/ReferencePool

   - php/cache/ApcCache verwendet für's Reference-Pooling eine ReferencePool-Instanz


2008-01-11

   - Dokumentation erweitert


2008-01-10

   - neue Methoden: php/dao/BaseDAO:makeObject(), php/dao/BaseDAO:makeObjects()


2008-01-07

   - neues Package php/dependency: Dependency-Framework

   - beim Cachen kann zusätzlich zur Expire-Zeit des Wertes eine Dependency angegeben werden

   - Struts: die Strutskonfiguration wird ständig gecacht (auch auf development-Systemen), per FileDependency
     monitored und bei Änderungen automatisch neu geladen


2008-01-07

   - php/net/http/HttpClient::setFollowRedirects() -> HttpClient::followRedirects(),
     php/net/http/HttpClient::isFollowRedirects()  -> HttpClient::followsRedirects()

   - php/util/String::decodeUtf8() verarbeitet sowohl Strings als auch String-Arrays


2008-01-05

   - neue Methoden: util/String::isUtf8Encoded(), util/String::decodeUtf8() (guess what they do)

   - php/struts/RequestProcessor: UTF8-kodierte URL's des Internet Explorers werden verarbeitet


2007-12-22

   - umfangreiches Refactoring am DB-Layer, u.a. ist das Mapping jetzt in den DAOs, PersistableObject::populate()
     und die createInstance()-Methoden in den konkreten Objekten existieren nicht mehr, statt dessen wurde alles
     in PersistableObject::createInstance() zusammengefaßt


2007-12-19

   - struts-config.xml: Syntaxvereinfachungen <tiles-definitions> -> <tiles>, <definition> -> <tile>


2007-12-18

   - Refactoring: php/util/BaseValidator   -> php/util/CommonValidator

   - php/db/PersistableObject -> php/dao/PersistableObject

   - DB-Layer: DAO-Hierarchie eingeführt, BaseDAO, IDaoConnected, alles von "static" auf Instanzen umgestellt
     (Instanzen sind über PersistableObject::dao() erreichbar)


2007-12-16

   - globale SQL-Funktionen aus phpLib.php entfernt (statt dessen die jeweiligen Object-Methoden benutzen)

   - Struts: Syntax vereinfacht, Eingabevalidierung ohne Action-Klassen ist möglich (API-Stand: stable)


2007-12-15

   - struts-config.xml: anwendungseigene HTTP-404- und HTTP-405-Fehlerlayouts werden automatisch eingebunden

   - php/struts/Tile: Zugriff auf umgebende Tiles-Instanz mit $this->parent->property entfernt


2007-12-12

   - struts-config.xml: in Tiles-Properties (<set>-Tag) vom Typ "string" können Variablen verwendet werden


2007-12-10

   - php/db/MySQLConnector: mysql_affected_rows() gibt jetzt die Anzahl der gefundenen anstatt der
     modifizierten Zeilen zurück


2007-12-06

   - Refactoring: php/core/Instantiatable -> php/core/ISingle


2007-12-05

   - php/net/http/HttpResponse: Status-Codes implementiert

   - php/db/: neu DBPool, DB, MySQLConnector (der DB-Zugriff wird klassenorientiert)

   - php/exceptions/: neu DatabaseException


2007-12-04

   - php/init.php -> phpLib.php

   - Klassen werden mit absolutem Pfad geladen, dadurch muß "include_path" nicht mehr durchsucht werden

   - Refactoring: globale Variable $__imports -> $__classes


2007-12-03

   - einige globale Funktionen aus init.php entfernt (statt dessen nur noch Methoden der jeweiligen
     Objekte benutzen)

   - neu: php/net/http/HeaderUtils
          php/struts/PageContext::get()
          php/struts/PageContext::set()
          php/struts/Request::isSessionId()

   - die HttpSession ist nur noch per Request::getSession() zu erreichen, nicht mehr durch HttpSession::me()

   - die HttpSession wird automatisch und nur, wenn sie wirklich benötigt wird, gestartet


2007-12-02

   - neu: php/struts/PageContext zum Datenaustausch zwischen Templates


2007-11-30

   - struts-config.xml: "form-error"-Attribut für ActionMappings, damit können Formulareingaben ohne
     ActionKlassen validiert werden, wenn außer der Validierung keine weitere Logik benötigt wird


2007-11-29

   - php/struts/:
     * logische Prüfung und Fehlermeldungen beim Parsen von struts-config.xml ausgebaut
     * forward-Attribut im ActionMapping kann auf globalen Forward oder Tiles-Definition zeigen
     * Tiles können ineinander geschachtelt werden
     * im <set>-Tag in Tilesdefinitionen muß kein Typ mehr angegeben werden, er wird selbst erkannt
     * in der HTML-Seite kann mit $this->parent->property auf in der umgebenden Tiles-Definition
       gesetzte Eigenschaften zugegriffen werden


2007-11-28

   - php/struts/FrontController: strengere Prüfung beim Zugriff auf CVS- oder WEB-INF-Verzeichnis,
     als Antwort wird nur noch ein 404 (SC_NOT_FOUND) akzeptiert

   - vorausschauendes Laden weiterer Klassendefinitionen; include('imports.php') in Projekten nicht
     mehr nötig


2007-11-27

   - php/struts/Request::getApplicationPath() -> getContextPath()
     php/struts/Request::getHostURL() hinzugefügt

   - php/actions/AbstractActionForm gelöscht, wird durch php/struts/ActionForm ersetzt

   - Package php/lang/  ->  php/exceptions/


2007-11-26

   - Sessionverwaltung ausgebaut: php/struts/HttpSession

   - php/util/Config vervollständigt (Anwendungskonfiguration)


2007-11-25

   - Refactoring:   php/core/StaticFactory            -> php/core/StaticClass
                    php/struts/Request::getPathInfo() -> Request::getPath()
                    php/struts/Request::getQuery()    -> Request::getQueryString()

   - neue Methoden: php/struts/ActionForward::addQueryData()
                    php/struts/Request::getApplicationPath()
                    php/struts/Request::getRelativePath()
                    php/struts/Request::getRelativeURI()
                    php/struts/Request::getURI()


2007-11-24

   - php/util/BaseValidator::isEmailAddressPattern() hinzugefügt


2007-11-23

   - Refactoring: globale Variable $__logLevelSettings -> $__logLevels


2007-11-20

   - php/struts/RequestProcessor: ActionMessages/-Errors werden bei einem Redirect automatisch zum
     nächsten Request übertragen

   - php/cache/: transparenter Namespace-Support, Werte können in verschiedenen Projekten unter
     denselben Keys gespeichert werden, ohne sich zu stören


2007-11-19

   - Refactoring: TorHelper::getExitNodes() benutzt CurlHttpClient
                  Klassen php/net/http/CURL und php/net/http/CurlHttpClient zusammengefaßt
                  php/functions.php -> php/init.php

   - php/struts/Request::getQuery() hinzugefügt

   - Bugfix: php/struts/ActionMapping::findForward('__self') hatte Query-Parameter der URL ignoriert


2007-11-12

   - Bugfix: Validierung von E-Mail-Adressen korrigiert


2007-11-06

   - php/net/http/CurlHttpClient::send() wirft jetzt bei allen auftretenden Fehlern eine IOException


2007-10-30

   - neues Package php/net/http/ für alles, was mit HTTP zu tun hat

   - neues Package php/net/mail/ für alles, was mit E-Mail zu tun hat

   - php/net/http/CurlHttpRequest: GET und POST implementiert

   - php/struts/FrontController: überprüft während der Initialisierung, ob der Webzugriff auf WEB-INF-
     und CVS-Verzeichnisse gesperrt ist

   - php/net/http/RemoteHttpRequest: gelöscht, statt dessen nur noch CurlHttpRequest verwenden


2007-10-29

   - Module: Konfiguration wird mit XPath eingelesen, dadurch sind überall Vorwärtsdeklarationen möglich

   - Tiles: Definitionen und Dateipfade werden auf Existenz überprüft


2007-10-28

   - automatische Rollenüberprüfung per struts-config.xml integriert

   - Vereinfachung für die Webentwickler: Action::executeBefore() und Action::execute() können statt
     einer ActionForward-Instanz auch einfach nur den entsprechenden Namen zurückgeben (so wie er in
     der struts-config.xml definiert ist)

   - der Modulprefix der Module wird nicht mehr in der struts-config.xml sondern über den Dateinamen
     konfiguriert:

     struts-config.xml          - Prefix: ""
     struts-config-member.xml   - Prefix: "/member"
     struts-config-xyz-123.xml  - Prefix: "/xyz-123"
