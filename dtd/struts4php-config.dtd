<!--
     DTD for the Struts for PHP Application Configuration File

     To support validation of your configuration file, include the following DOCTYPE element at the 
     beginning (after the "xml" declaration):

     <!DOCTYPE struts-config SYSTEM "dtd/struts4php-config.dtd">
-->


<!-- ========== Defined Types ============================================= -->


<!-- A "Boolean" is the string representation of a boolean (true or false) variable.
-->

<!ENTITY % Boolean "(true|false)">


<!-- A "ClassName" is the simple name of a PHP class that is instantiated to provide the 
     functionality of the enclosing element.
-->
<!ENTITY % ClassName "CDATA">


<!-- A "LogicalName" is the logical name used to reference an element. It must begin with a letter 
     and contain only characters that are legal in a PHP identifier.
-->
<!ENTITY % LogicalName "CDATA">


<!-- A "RequestPath" is a module-relative URI path, beginning with a slash "/", that identifies a 
     mapped resource within this web application.
-->
<!ENTITY % RequestPath "CDATA">


<!-- A "ResourcePath" is a relative path, delimited by slash "/" characters, that defines the 
     location of a resource relative to the location of the Struts configuration file itself.
-->
<!ENTITY % ResourcePath "CDATA">



<!-- ========== Top Level Elements ======================================== -->


<!-- The "struts-config" element is the root of the configuration file hierarchy, and contains 
     nested elements for all of the other configuration settings.

     doc-base       The base directory to lookup local resources.  This value is interpreted as 
                    relative to the location of the Struts configuration file itself.
                    ["."]

     role-processor Class name of the [RoleProcessor] subclass that will perform role checking 
                    for this module.
-->
<!ELEMENT struts-config (global-forwards?, action-mappings, tiles-definitions?)>
<!ATTLIST struts-config  
          doc-base          %ResourcePath;  #IMPLIED
          role-processor    %ClassName;     #IMPLIED
>


<!-- The "global-forwards" element describes a set of ActionForward objects that are available to 
     all Action objects as a return value. The individual ActionForwards are configured through 
     nested <forward> elements. An <action> element may override a global forward by defining a 
     local <forward> of the same name.
-->
<!ELEMENT global-forwards (forward*)>


<!-- The "forward" element describes an ActionForward that is to be made available to an Action as 
     a return value.  An ActionForward is referenced by a logical name and encapsulates an URI or 
     a tiles definition.  A "forward" element may be used to describe both global and local forwards. 
     Global forwards are available to all actions of the module. Local forwards can be nested 
     within a <mapping> element and are only available to an action when it is invoked through that 
     ActionMapping.

     name       The unique identifier for the forward. Referenced by the Action object at runtime 
                to select - by its logical name - the resource that should complete the request/
                response.

     include    The identifier of a resource to include.  This may be a tiles definition or a path 
                to a physical resource relative to the resource base directory of the module.
                Exactly one of "include", "redirect" or "alias" must be specified.

     redirect   The module-relative path of the location to which a redirect instruction should be 
                issued.  Exactly one of "include", "redirect" or "alias" must be specified.

     alias      The unique identifier of another ActionForward to use instead.  Exactly one of 
                "include", "redirect" or "alias" must be specified.
-->
<!ELEMENT forward (set-property*)>
<!ATTLIST forward        
          name          %LogicalName;   #REQUIRED
          include       %ResourcePath;  #IMPLIED
          redirect      %RequestPath;   #IMPLIED
          alias         %LogicalName;   #IMPLIED
>


<!-- The "action-mappings" element describes a set of ActionMapping objects that are available to 
     process requests matching the given url-pattern.  The individual ActionMappings are configured 
     through nested <mapping> elements.
-->
<!ELEMENT action-mappings (mapping+)>


<!-- The "mapping" element describes an ActionMapping object that is to be used to process a request 
     for a specific module-relative URI. The following attributes are defined:

     path       The module-relative path of the submitted request, starting with a slash "/" character.

     forward    The identifier of a resource to include, instead of passing the request to an action 
                specified by "action".  See the "forward" element's "include" attribute for more 
                information.  Not valid if the "action" attribute is specified.

     action     Class name of the [Action] subclass that will process requests for the action mapping. 
                Not valid if the "forward" attribute is specified.  If no "forward" attribute is specified
                and an action with a name matching the mapping's "path" attribute is found that action 
                is used.  So if you carefully name paths and classes (ie. "/doThat.php" matches 
                "DoThatAction") you can omit this value.

     form       Class name of the [ActionForm] subclass, if any, that is associated with the mapping.  
                If an action form with a name matching the mapping's action is found that action form 
                is used.  So if you carefully name your classes (ie. "DoThatAction" matches 
                "DoThatActionForm") you can omit this value.

     parameter  General-purpose configuration parameter that can be used to pass extra information to 
                the action object of the mapping.

     roles      Comma-delimited list of role names that are allowed access to the action mapping.

     method     The HTTP method type that the action mapping is restricted to. Legal values are "get" 
                and "post" [no restrictions].

     default    Set to "true" if the mapping should be configured as the default action mapping for 
                the module.  If a request does not match any other mapping, it will be passed to the 
                action mapping with default set to "true". Only one action mapping can be marked as 
                "default" within a module [false].
-->
<!ELEMENT mapping (set-property*, forward*)>
<!ATTLIST mapping        
          path          %RequestPath;   #REQUIRED
          forward       %ResourcePath;  #IMPLIED
          action        %ClassName;     #IMPLIED
          form          %ClassName;     #IMPLIED
          parameter     CDATA           #IMPLIED
          roles         CDATA           #IMPLIED
          method        (get|post)      #IMPLIED
          default       %Boolean;       "false"
>


<!-- The "tiles-definitions" element describes a set of TilesDefinition objects that are available.  
     The individual definitions are configured through nested <definition> elements.
-->
<!ELEMENT tiles-definitions (definition*)>


<!-- The "definition" element describes a single definition that can be inserted in a page. It is 
     identified by its logical name. 

     name       The unique identifier for this definition.

     path       The path of the resource used as tile relative to the "WEB-INF" directory of the 
                application.  Exactly one of "path" or "extends" must be specified.

     extends    Name of a definition that is used as ancestor of this definition.  All attributes 
                from the ancestor are available to the new definition.  Any attribute inherited 
                from the ancestor can be overloaded by providing a new value.  Exactly one of "path"
                or "extends" must be specified.
-->
<!ELEMENT definition (set*)>
<!ATTLIST definition       
          name      %LogicalName;   #REQUIRED
          path      %ResourcePath;  #IMPLIED
          extends   %LogicalName;   #IMPLIED
>


<!-- The "set" element describes an additional property passed to a tiles definition.  The value 
     of this property can be specified as an xml attribute or in the body of the <set> tag.

     name       The unique identifier for this property.

     type       The type of the passed value. Can be "string" or "resource".  If a type is specified, 
                it will be used to process the value when the property will be used in the inserted 
                tile.  If no type is specified and a resource with a name matching the attribute 
                "value" of the property is found, "resource" is used.  Otherwise "string" is used.

     value      The value of the property. The value can be specified as an xml attribute, or in the 
                body of the <set> tag.
-->
<!ELEMENT set (#PCDATA)>
<!ATTLIST set              
          name      %LogicalName;       #REQUIRED
          type      (string|resource)   "resource"
          value     CDATA               #IMPLIED
>


<!-- ========== Subordinate Elements ====================================== -->


<!-- The "set-property" element specifies the method name and initial value of an additional class 
     configuration property.  When the object representing the surrounding element is instantiated, 
     the accessor for the indicated property is called and passed the indicated value. 
     The "set-property" element is especially useful when a custom subclass is used with <forward> 
     or <mapping> elements.  The subclass can be passed whatever other properties may be required 
     to configure the object without changing how the struts-config is parsed.

     property   Name of the class property whose setter method will be called.

     value      String representation of the value to which this property will be set, after suitable 
                type conversion.
-->
<!ELEMENT set-property EMPTY>
<!ATTLIST set-property   
          property      %LogicalName;   #REQUIRED
          value         CDATA           #REQUIRED
>
